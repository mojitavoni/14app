name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  validate-data:
    name: Validate Data Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        pip install --no-cache-dir duckdb pandas polars pyarrow
        
    - name: Validate CSV files
      run: |
        python scripts/validate_data.py
      if: hashFiles('data/**/*.csv') != ''
      
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
      if: always()
      
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
      if: hashFiles('package.json') != ''
        
    - name: Install Python linters
      run: |
        pip install pylint black isort
        
    - name: Lint Python
      run: |
        find . -name "*.py" -exec pylint {} +
      continue-on-error: true
      
    - name: Check Python formatting
      run: |
        black --check .
      continue-on-error: true
      
    - name: Lint JavaScript
      run: |
        npm install
        npm run lint
      if: hashFiles('package.json') != ''
      continue-on-error: true
